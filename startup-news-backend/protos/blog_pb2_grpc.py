# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from protos import blog_pb2 as protos_dot_blog__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protos/blog_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BlogStub(object):
    """Our main gRPC service for the blog application
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RPCLogin = channel.unary_unary(
                '/blog.Blog/RPCLogin',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCLogout = channel.unary_unary(
                '/blog.Blog/RPCLogout',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCSubscribe = channel.unary_unary(
                '/blog.Blog/RPCSubscribe',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCDeleteAccount = channel.unary_unary(
                '/blog.Blog/RPCDeleteAccount',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCCreateAccount = channel.unary_unary(
                '/blog.Blog/RPCCreateAccount',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCCreatePost = channel.unary_unary(
                '/blog.Blog/RPCCreatePost',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetPost = channel.unary_unary(
                '/blog.Blog/RPCGetPost',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetUserPosts = channel.unary_unary(
                '/blog.Blog/RPCGetUserPosts',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetPostById = channel.unary_unary(
                '/blog.Blog/RPCGetPostById',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCLikePost = channel.unary_unary(
                '/blog.Blog/RPCLikePost',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCUnlikePost = channel.unary_unary(
                '/blog.Blog/RPCUnlikePost',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCDeletePost = channel.unary_unary(
                '/blog.Blog/RPCDeletePost',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetNotifications = channel.unary_unary(
                '/blog.Blog/RPCGetNotifications',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCMarkNotificationsAsRead = channel.unary_unary(
                '/blog.Blog/RPCMarkNotificationsAsRead',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCSearchUsers = channel.unary_unary(
                '/blog.Blog/RPCSearchUsers',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetUserProfile = channel.unary_unary(
                '/blog.Blog/RPCGetUserProfile',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RequestVote = channel.unary_unary(
                '/blog.Blog/RequestVote',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.AppendEntries = channel.unary_unary(
                '/blog.Blog/AppendEntries',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCGetLeaderInfo = channel.unary_unary(
                '/blog.Blog/RPCGetLeaderInfo',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCAddReplica = channel.unary_unary(
                '/blog.Blog/RPCAddReplica',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)
        self.RPCRemoveReplica = channel.unary_unary(
                '/blog.Blog/RPCRemoveReplica',
                request_serializer=protos_dot_blog__pb2.Request.SerializeToString,
                response_deserializer=protos_dot_blog__pb2.Response.FromString,
                _registered_method=True)


class BlogServicer(object):
    """Our main gRPC service for the blog application
    """

    def RPCLogin(self, request, context):
        """--- Blog-based RPCs ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCLogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCSubscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCDeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCCreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCCreatePost(self, request, context):
        """Post operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetUserPosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetPostById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCLikePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCUnlikePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCDeletePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetNotifications(self, request, context):
        """Notification operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCMarkNotificationsAsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCSearchUsers(self, request, context):
        """User operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetUserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestVote(self, request, context):
        """--- Raft-based RPCs ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppendEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCGetLeaderInfo(self, request, context):
        """For convenience: get leader info, etc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCAddReplica(self, request, context):
        """For membership changes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RPCRemoveReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlogServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RPCLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCLogin,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCLogout,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCSubscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCSubscribe,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCDeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCDeleteAccount,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCCreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCCreateAccount,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCCreatePost': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCCreatePost,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetPost': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetPost,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetUserPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetUserPosts,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetPostById': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetPostById,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCLikePost': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCLikePost,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCUnlikePost': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCUnlikePost,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCDeletePost': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCDeletePost,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetNotifications,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCMarkNotificationsAsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCMarkNotificationsAsRead,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCSearchUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCSearchUsers,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetUserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetUserProfile,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RequestVote': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestVote,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'AppendEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.AppendEntries,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCGetLeaderInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCGetLeaderInfo,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCAddReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCAddReplica,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
            'RPCRemoveReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RPCRemoveReplica,
                    request_deserializer=protos_dot_blog__pb2.Request.FromString,
                    response_serializer=protos_dot_blog__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blog.Blog', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('blog.Blog', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Blog(object):
    """Our main gRPC service for the blog application
    """

    @staticmethod
    def RPCLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCLogin',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCLogout',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCSubscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCSubscribe',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCDeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCDeleteAccount',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCCreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCCreateAccount',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCCreatePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCCreatePost',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetPost',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetUserPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetUserPosts',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetPostById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetPostById',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCLikePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCLikePost',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCUnlikePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCUnlikePost',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCDeletePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCDeletePost',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetNotifications',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCMarkNotificationsAsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCMarkNotificationsAsRead',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCSearchUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCSearchUsers',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetUserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetUserProfile',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestVote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RequestVote',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AppendEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/AppendEntries',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCGetLeaderInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCGetLeaderInfo',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCAddReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCAddReplica',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RPCRemoveReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.Blog/RPCRemoveReplica',
            protos_dot_blog__pb2.Request.SerializeToString,
            protos_dot_blog__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
